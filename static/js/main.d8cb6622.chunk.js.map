{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/itemEditing.js","reducers/filterTable.js","reducers/index.js","index.js"],"names":["LIST_ALL","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","FILTER_TABLE","openForm","type","types","closeForm","editTask","task","TaskForm","props","onClear","setState","name","status","onChange","event","target","value","onSubmit","preventDefault","onSave","state","onCloseForm","id","this","itemEditing","nextProps","isDisplayForm","className","onClick","required","Component","connect","dispatch","actions","Search","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","data-bs-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","TaskItem","onUpdateStatus","onDelete","onDeleteTask","onEditTask","onOpenForm","index","TaskList","filterName","filterStatus","tasks","elmItem","map","App","onToggleForm","onClearTask","findIndex","result","forEach","onUpdate","taskEditing","onFilter","parseInt","filter","toLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","s4","Math","floor","random","toString","substring","generateID","data","JSON","parse","localStorage","getItem","initialState","myReducers","action","push","setItem","stringify","splice","console","log","combineReducers","filterTable","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8cb6622.chunk.js","sourcesContent":["export const LIST_ALL = \"LIST_ALL\";\r\nexport const SAVE_TASK = \"SAVE_TASK\";\r\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\r\nexport const CLOSE_FORM = \"CLOSE_FORM\";\r\nexport const OPEN_FORM = \"OPEN_FORM\";\r\nexport const UPDATE_STATUS_TASK = \"UPDATE_STATUS_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\nexport const FILTER_TABLE = \"FILTER_TABLE\";\r\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nexport const listAll = () => {\r\n  return {\r\n    type: types.LIST_ALL,\r\n  };\r\n};\r\n\r\nexport const saveTask = (task) => {\r\n  return {\r\n    type: types.SAVE_TASK,\r\n    task,\r\n  };\r\n};\r\nexport const toggleForm = () => {\r\n  return {\r\n    type: types.TOGGLE_FORM,\r\n  };\r\n};\r\nexport const openForm = () => {\r\n  return {\r\n    type: types.OPEN_FORM,\r\n  };\r\n};\r\nexport const closeForm = () => {\r\n  return {\r\n    type: types.CLOSE_FORM,\r\n  };\r\n};\r\nexport const updateStatus = (id) => {\r\n  return {\r\n    type: types.UPDATE_STATUS_TASK,\r\n    id,\r\n  };\r\n};\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: types.DELETE_TASK,\r\n    id,\r\n  };\r\n};\r\nexport const editTask = (task) => {\r\n  return {\r\n    type: types.EDIT_TASK,\r\n    task,\r\n  };\r\n};\r\nexport const filterTask = (filter) => {\r\n  return {\r\n    type: types.FILTER_TABLE,\r\n    filter,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./../actions/index\";\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.itemEditing) {\r\n      this.setState({\r\n        id: this.props.itemEditing.id,\r\n        name: this.props.itemEditing.name,\r\n        status: this.props.itemEditing.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps && nextProps.itemEditing) {\r\n      this.setState({\r\n        id: nextProps.itemEditing.id,\r\n        name: nextProps.itemEditing.name,\r\n        status: nextProps.itemEditing.status,\r\n      });\r\n    } else if (!nextProps.itemEditing) {\r\n      this.setState({\r\n        id: \"\",\r\n        name: \"\",\r\n        status: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSave(this.state);\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  };\r\n\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  render() {\r\n    var { id } = this.state;\r\n    if (!this.props.isDisplayForm) return \"\";\r\n\r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">{id != \"\" ? \"Cập nhật\" : \"Thêm\"}</h3>\r\n          <button className=\"btn btn-danger\" onClick={this.onCloseForm}>\r\n            x\r\n          </button>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên :</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={this.onChange}\r\n                className=\"form-control\"\r\n                value={this.state.name}\r\n              />\r\n            </div>\r\n            <label>Trạng Thái :</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"status\"\r\n              onChange={this.onChange}\r\n              required=\"required\"\r\n              value={this.state.status}\r\n            >\r\n              <option value={true}>Kích Hoạt</option>\r\n              <option value={false}>Ẩn</option>\r\n            </select>\r\n            <br />\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning\">\r\n                Thêm\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onClear}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                Hủy Bỏ\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDisplayForm: state.isDisplayForm,\r\n    itemEditing: state.itemEditing,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSave: (task) => {\r\n      dispatch(actions.saveTask(task));\r\n    },\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: \"\",\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-group\">\r\n        <input\r\n          name=\"keyword\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Nhập từ khóa...\"\r\n          onChange={this.onChange}\r\n          value={this.state.keyword}\r\n        />\r\n        <span className=\"input-group-btn\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={this.onSearch}\r\n          >\r\n            Tìm\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Sort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onClick = (sortBy, sortValue) => {\r\n    this.props.onSort(sortBy, sortValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button\r\n          className=\"btn btn-primary dropdown-toggle\"\r\n          type=\"button\"\r\n          id=\"dropdownMenu1\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"true\"\r\n        >\r\n          Sắp Xếp\r\n        </button>\r\n        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n          <li\r\n            onClick={() => this.onClick(\"name\", 1)}\r\n            className={\r\n              this.props.sortBy === \"name\" && this.props.sortValue === 1\r\n                ? \"bg-success text-white\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <a role=\"button\">Tên A-Z</a>\r\n          </li>\r\n          <li\r\n            onClick={() => this.onClick(\"name\", -1)}\r\n            className={\r\n              this.props.sortBy === \"name\" && this.props.sortValue === -1\r\n                ? \"bg-success text-white\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <a role=\"button\">Tên Z-A</a>\r\n          </li>\r\n          <li\r\n            onClick={() => this.onClick(\"status\", 1)}\r\n            className={\r\n              this.props.sortBy === \"status\" && this.props.sortValue === 1\r\n                ? \"bg-success text-white\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <a role=\"button\">Trạng Thái Kích Hoạt</a>\r\n          </li>\r\n          <li\r\n            onClick={() => this.onClick(\"status\", -1)}\r\n            className={\r\n              this.props.sortBy === \"status\" && this.props.sortValue === -1\r\n                ? \"bg-success text-white\"\r\n                : \"\"\r\n            }\r\n          >\r\n            <a role=\"button\">Trạng Thái Ẩn</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nexport default class Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <div className=\"col-6\">\r\n          <Search onSearch={this.props.onSearch} />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <Sort\r\n            onSort={this.props.onSort}\r\n            sortBy={this.props.sortBy}\r\n            sortValue={this.props.sortValue}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./../actions/index\";\r\n\r\nclass TaskItem extends Component {\r\n  onUpdateStatus = () => {\r\n    var { task } = this.props;\r\n    this.props.onUpdateStatus(task.id);\r\n  };\r\n\r\n  onDelete = () => {\r\n    this.props.onDeleteTask(this.props.task.id);\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  onEditTask = () => {\r\n    this.props.onOpenForm();\r\n    this.props.onEditTask(this.props.task);\r\n  };\r\n\r\n  render() {\r\n    var { task, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{index + 1}</td>\r\n        <td>{task.name}</td>\r\n        <td className=\"text-center\">\r\n          <span\r\n            className={\r\n              task.status === true\r\n                ? \"p-1 text-white rounded bg-success\"\r\n                : \"p-1 text-white rounded bg-danger\"\r\n            }\r\n            onClick={this.onUpdateStatus}\r\n          >\r\n            {task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n          </span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={this.onEditTask}\r\n          >\r\n            Sửa\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDelete}\r\n          >\r\n            Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDisplayForm: state.isDisplayForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onUpdateStatus: (id) => {\r\n      dispatch(actions.updateStatus(id));\r\n    },\r\n    onDeleteTask: (id) => {\r\n      dispatch(actions.deleteTask(id));\r\n    },\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    },\r\n    onOpenForm: () => {\r\n      dispatch(actions.openForm());\r\n    },\r\n    onEditTask: (task) => {\r\n      dispatch(actions.editTask(task));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: \"\",\r\n      filterStatus: -1, // all: -1, active: 1, deative: 0\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    // this.props.onFilter(\r\n    //   name === \"fiterName\" ? value : this.state.filterName,\r\n    //   name === \"filterStatus\" ? value : this.state.filterStatus\r\n    // );\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    var { tasks } = this.props;\r\n    var { filterName, filterStatus } = this.state;\r\n    var elmItem = tasks.map((task, index) => {\r\n      return <TaskItem key={index} task={task} index={index} />;\r\n    });\r\n    return (\r\n      <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">STT</th>\r\n              <th className=\"text-center\">Tên</th>\r\n              <th className=\"text-center\">Trạng Thái</th>\r\n              <th className=\"text-center\">Hành Động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"filterName\"\r\n                  value={filterName}\r\n                  onChange={this.onChange}\r\n                  className=\"form-control\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <select\r\n                  name=\"filterStatus\"\r\n                  value={filterStatus}\r\n                  onChange={this.onChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value={-1}>Tất Cả</option>\r\n                  <option value={0}>Ẩn</option>\r\n                  <option value={1}>Kích Hoạt</option>\r\n                </select>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n            {elmItem}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, null)(TaskList);\r\n","import React, { Component } from \"react\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport Control from \"./components/Control\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./actions/index\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskEditing: null,\r\n      filter: {\r\n        name: \"\",\r\n        status: -1,\r\n      },\r\n      keyword: \"\",\r\n      sortBy: \"name\",\r\n      sortValue: 1,\r\n    };\r\n  }\r\n\r\n  // Toggle Form\r\n  onToggleForm = () => {\r\n    var { itemEditing } = this.props;\r\n    if (itemEditing && itemEditing.id !== \"\") {\r\n      this.props.onOpenForm();\r\n    } else {\r\n      this.props.onToggleForm();\r\n    }\r\n    this.props.onClearTask({\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n\r\n  // Close Form\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  };\r\n  // Open Form\r\n  onOpenForm = () => {\r\n    this.setState({\r\n      isDisplayForm: true,\r\n    });\r\n  };\r\n\r\n  //Find Item\r\n  findIndex = (id) => {\r\n    var { tasks } = this.state;\r\n    var result = -1;\r\n    tasks.forEach((task, index) => {\r\n      if (task.id === id) {\r\n        return (result = index);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  //Update Item\r\n  onUpdate = (id) => {\r\n    var { tasks, taskEditing } = this.state;\r\n    var index = this.findIndex(id);\r\n    var taskEditing = tasks[index];\r\n    this.setState({\r\n      taskEditing: taskEditing,\r\n    });\r\n    this.onOpenForm();\r\n  };\r\n  onFilter = (filterName, filterStatus) => {\r\n    filterStatus = parseInt(filterStatus, 10);\r\n    this.setState({\r\n      filter: {\r\n        name: filterName.toLowerCase(),\r\n        status: filterStatus,\r\n      },\r\n    });\r\n  };\r\n\r\n  onSearch = (keyword) => {\r\n    this.setState({\r\n      keyword: keyword.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  onSort = (sortBy, sortValue) => {\r\n    this.setState({\r\n      sortBy: sortBy,\r\n      sortValue: sortValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { sortBy, sortValue } = this.state;\r\n    var { isDisplayForm } = this.props;\r\n    // Lọc\r\n    // if (filter) {\r\n    //   if (filter.name) {\r\n    //     tasks = tasks.filter((task) => {\r\n    //       return task.name.toLowerCase().indexOf(filter.name) != -1;\r\n    //     });\r\n    //   }\r\n\r\n    //   // tasks = tasks.filter((task) => {\r\n    //   //   if (filter.status === -1) {\r\n    //   //     return task;\r\n    //   //   } else {\r\n    //   //     return task.status === (filter.status === 1 ? true : false);\r\n    //   //   }\r\n    //   // });\r\n    // }\r\n    // if (keyword) {\r\n    //   tasks = tasks.filter((task) => {\r\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\r\n    //   });\r\n    // }\r\n    // if (sortBy === \"name\") {\r\n    //   tasks.sort((a, b) => {\r\n    //     if (a.name > b.name) return -sortValue;\r\n    //     else if (a.name < b.name) return sortValue;\r\n    //     else return 0;\r\n    //   });\r\n    // } else {\r\n    //   tasks.sort((a, b) => {\r\n    //     if (a.status > b.status) return -sortValue;\r\n    //     else if (a.status < b.status) return sortValue;\r\n    //     else return 0;\r\n    //   });\r\n    // }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <h1> Quản Lý Công Việc </h1> <hr />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className={isDisplayForm ? \"col-4\" : \"\"}>\r\n            <TaskForm /> {/* Task Form */}\r\n          </div>\r\n          <div className={isDisplayForm ? \"col-8\" : \"col-12\"}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.onToggleForm}\r\n              className=\"btn btn-primary mb-3 me-3\"\r\n            >\r\n              Thêm Công Việc\r\n            </button>\r\n            <Control\r\n              onSearch={this.onSearch}\r\n              onSort={this.onSort}\r\n              sortBy={sortBy}\r\n              sortValue={sortValue}\r\n            />{\" \"}\r\n            {/* Control */}\r\n            <div className=\"row mt-3\">\r\n              <TaskList onFilter={this.onFilter} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDisplayForm: state.isDisplayForm,\r\n    itemEditing: state.itemEditing,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    },\r\n    onToggleForm: () => {\r\n      dispatch(actions.toggleForm());\r\n    },\r\n    onClearTask: (task) => {\r\n      dispatch(actions.editTask(task));\r\n    },\r\n    onOpenForm: () => {\r\n      dispatch(actions.openForm());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nvar s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 0x10000)\r\n    .toString(16)\r\n    .substring(1);\r\n};\r\n\r\nvar findIndex = (tasks, id) => {\r\n  var result = -1;\r\n  tasks.forEach((task, index) => {\r\n    if (task.id === id) {\r\n      return (result = index);\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nvar generateID = () => {\r\n  return s4() + s4() + \"-\" + s4() + s4() + \"-\" + s4();\r\n};\r\n\r\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LIST_ALL:\r\n      return state;\r\n    case types.SAVE_TASK:\r\n      var task = {\r\n        id: action.task.id,\r\n        name: action.task.name,\r\n        status: action.task.status,\r\n      };\r\n      if (!action.task.id) {\r\n        task.id = generateID();\r\n        state.push(task);\r\n      } else {\r\n        var index = findIndex(state, action.task.id);\r\n        state[index] = task;\r\n      }\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n    case types.UPDATE_STATUS_TASK:\r\n      var id = action.id;\r\n      var index = findIndex(state, id);\r\n      // state[index].status = !state[index].status;\r\n      state[index] = {\r\n        ...state[index],\r\n        status: !state[index].status,\r\n      };\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n    case types.DELETE_TASK:\r\n      var id = action.id;\r\n      var index = findIndex(state, id);\r\n      state.splice(index, 1);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducers;\r\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nvar initialState = false;\r\n\r\nvar myReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FORM:\r\n      return !state;\r\n    case types.OPEN_FORM:\r\n      return true;\r\n    case types.CLOSE_FORM:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducers;\r\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nvar initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  status: false,\r\n};\r\n\r\nvar myReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.EDIT_TASK:\r\n      return action.task;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducers;\r\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nvar initialState = {\r\n  name: \"\",\r\n  status: -1,\r\n};\r\n\r\nvar myReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FILTER_TABLE:\r\n      console.log(action);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport isDisplayForm from \"./isDisplayForm\";\r\nimport itemEditing from \"./itemEditing\";\r\nimport filterTable from \"./filterTable\";\r\n\r\nconst myReducers = combineReducers({\r\n  tasks, // tasks: tasks\r\n  isDisplayForm,\r\n  itemEditing,\r\n  filterTable,\r\n});\r\n\r\nexport default myReducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n//Store\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport myReducers from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n  myReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}